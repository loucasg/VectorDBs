services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_vector_db
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC API
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    command: ./qdrant --config-path /qdrant/config/production.yaml

  # PostgreSQL 17 with pgvector
  postgres:
    image: pgvector/pgvector:pg17
    container_name: postgres_vector_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vectordb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # TimescaleDB with pgvector (PostgreSQL 17)
  timescaledb:
    image: timescale/timescaledb-ha:pg17
    container_name: timescaledb_vector_db
    ports: 
     - "5433:5432"
    environment:
     - POSTGRES_DB=vectordb
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - TIMESCALEDB_TELEMETRY=off
     - PGDATA=/home/postgres/pgdata/data      
    volumes:
      - ./data/timescaledb:/home/postgres/pgdata/data
      - ./init-timescaledb.sql:/docker-entrypoint-initdb.d/init-timescaledb.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Milvus vector database
  milvus:
    image: milvusdb/milvus:v2.4.0
    container_name: milvus_vector_db
    ports:
      - "19530:19530"  # gRPC API
      - "9091:9091"    # REST API
    environment:
      - ETCD_USE_EMBED=true
      - ETCD_DATA_DIR=/var/lib/milvus/etcd
      - COMMON_STORAGETYPE=local
    volumes:
      - ./data/milvus:/var/lib/milvus
    restart: unless-stopped
    command: ["milvus", "run", "standalone"]

  # Weaviate vector database
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: weaviate_vector_db
    ports:
      - "8080:8080"    # REST API
      - "50051:50051"  # gRPC API
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai
      - CLUSTER_HOSTNAME=node1
    volumes:
      - ./data/weaviate:/var/lib/weaviate
    restart: unless-stopped

